{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/Footer.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","onShowClick","e","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","match","params","Footer","owner","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","preventDefault","_this$state","newContact","post","history","push","_this$state2","layout_TextInputGroup","EditContact","_callee","updContact","regenerator_default","wrap","_context","prev","next","abrupt","put","sent","stop","NotFound","Test","fetch","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","layout_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0977c977.chunk.js","sourcesContent":["import React , { Component } from 'react';\nimport axios from 'axios';\n\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  //console.log(state, action);\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state, // Spread operator\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload,\n        ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id ? (contact = action.payload) : contact)\n      };\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  //Global state\n  state = {\n    contacts: [],\n\n    dispatch: action => this.setState(state => reducer(state,action))\n  };\n\n  componentDidMount() {\n    axios\n      .get('https://jsonplaceholder.typicode.com/users')\n      .then(res => this.setState({contacts: res.data}));\n  }\n\n  componentDidUpdate() {\n    //console.log('componentDidUpdate...');\n  }\n\n  componentWillUpdate() {\n    //console.log('componentWillUpdate...');\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\n//class Component\nclass Contact extends Component {\n\n\n  // Static or out of the class as specified below\n  // Static propTypes = {\n  //   name: PropTypes.string.isRequired,\n  //   email: PropTypes.string.isRequired,\n  //   phone: PropTypes.string.isRequired,\n  // };\n\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = (id, dispatch) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    .then(res => dispatch({type: 'DELETE_CONTACT', payload: id}))\n  };\n\n  onShowClick = (e) => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  render() {\n\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{' '}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}>\n                </i>\n                <i className=\"fas fa-times\"\n                   style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                   onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`contact/edit/${id}`}>\n                <i className=\"fas fa-pencil-alt\"\n                   style={{\n                     cursor: 'pointer',\n                     float: 'right',\n                     color: 'black',\n                     marginRight: '1rem'\n                   }}\n                ></i>\n                </Link>\n\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\n// Validates the expected type of defined props\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact      from './Contact';\nimport { Consumer } from '../../context';\n\n//Class Component\nclass Contacts extends Component {\n\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">\n                Contact </span>\n                List\n              </h1>\n              {contacts.map(contact => (\n                <Contact\n                  key ={contact.id}\n                  contact={contact}\n                />\n              ))}\n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n//Functional Component\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/About\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i>About\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i>Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i>Home\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Default Header if branding is not passed\nHeader.defaultProps = {\n  branding: 'My App'\n}\n\n// Validates the expected type of defined props\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\n\nexport default Header;\n","import React from 'react';\n\nexport default (props) => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <h4>ID:{props.match.params.id}</h4>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\n//Functional Component\nconst Footer = (props) => {\n  //console.log(props);\n  const { owner } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{owner}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <a href=\"/\" className=\"nav-link\">\n                Home\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\n// Default Header if branding is not passed\nFooter.defaultProps = {\n  owner: 'Antonio Calmon'\n}\n\n// Validates the expected type of defined props\nFooter.propTypes = {\n  owner: PropTypes.string.isRequired\n};\n\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {'is-invalid': error})}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">\n        {error}</div>}\n    </div>\n  );\n};\n\n\n// Validation of props\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n//import uuid from 'uuid';\n\nclass AddContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value });\n    //console.log(e.target.name, e.target.value, e.target);\n  };\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if(name === '') {\n      this.setState({errors: { name: 'Name is required' }});\n      return;\n    }\n    if(email === '') {\n      this.setState({errors: { email: 'Email is required' }});\n      return;\n    }\n    if(phone === '') {\n      this.setState({errors: { phone: 'Phone is required' }});\n      return;\n    }\n\n    const newContact = {\n      //id: uuid(),\n      name: name,       // Could be only name, key and value equal\n      email: email,\n      phone: phone\n    }\n\n    axios.post('https://jsonplaceholder.typicode.com/users',newContact)\n    .then(res => dispatch({type: 'ADD_CONTACT', payload: res.data }));\n\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n    // Redirect to home page\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    //console.log(Consumer);\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Add Contact\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input type=\"submit\" value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport { Consumer } from '../../context'\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n//import uuid from 'uuid';\n\nclass EditContact extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => {\n    this.setState({[e.target.name]: e.target.value });\n    //console.log(e.target.name, e.target.value, e.target);\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    //console.log(this.state);\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if(name === '') {\n      this.setState({errors: { name: 'Name is required' }});\n      return;\n    }\n    if(email === '') {\n      this.setState({errors: { email: 'Email is required' }});\n      return;\n    }\n    if(phone === '') {\n      this.setState({errors: { phone: 'Phone is required' }});\n      return;\n    }\n\n    const updContact = {\n      name: name,       // Could be only name, key and value equal\n      email: email,\n      phone: phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data });\n\n    //Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n    // Redirect to home page\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    //console.log(Consumer);\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">\n                Edit Contact\n                <div className=\"card-body\">\n                  <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                    <TextInputGroup\n                      label=\"Name\"\n                      name=\"name\"\n                      placeholder=\"Enter Name\"\n                      value={name}\n                      onChange={this.onChange}\n                      error={errors.name}\n                    />\n                    <TextInputGroup\n                      label=\"Email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"Enter Email\"\n                      value={email}\n                      onChange={this.onChange}\n                      error={errors.email}\n                    />\n                    <TextInputGroup\n                      label=\"Phone\"\n                      name=\"phone\"\n                      placeholder=\"Enter Phone\"\n                      value={phone}\n                      onChange={this.onChange}\n                      error={errors.phone}\n                    />\n\n                    <input type=\"submit\" value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                    />\n                  </form>\n                </div>\n              </div>\n            </div>\n\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n      <span className=\"text-danger\">404</span> Page not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist!</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\n\nclass  Test extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    phone: ''\n    //test: 'test'\n  }\n\n  componentDidMount() {\n    //console.log('componentDidMount...');\n    fetch('https://jsonplaceholder.typicode.com/users/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        name: data.name,\n        email: data.email,\n        phone: data.phone\n      })\n    );\n  }\n\n  // componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n  //\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n  //\n  // componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n  //\n  // // Data coming from Redux\n  // componentWillReceiveProps(nextProps, nextStatetate) {\n  //   console.log('componentWillReceiveProps...');\n  // }\n  //\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return {\n  //     test: 'null'\n  //   };\n  // }\n  //\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log(' getSnapshotBeforeUpdate...')\n  // }\n\n  render() {\n    const { name, email, phone } = this.state;\n    return (\n\n      <div>\n        <h1>{name}</h1>\n        <p>{email}</p>\n        <p>{phone}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from 'react';\n//import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // Dev environment\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'; // Productio\nimport Contacts     from './components/contacts/Contacts';\nimport Header       from './components/layout/Header';\nimport About        from './components/pages/About';\nimport Footer       from './components/layout/Footer';\nimport AddContact   from './components/contacts/AddContact';\nimport EditContact   from './components/contacts/EditContact';\nimport NotFound     from './components/pages/NotFound';\nimport Test         from './components/test/Test';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/about/:id\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n            <Footer owner='Daniel Valle' />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}